name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

# Cancel in-progress runs for the same PR or branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: us-west-2
  INFRA_AWS_ACCOUNT_ID: "${{ vars.AWS_ACCOUNT_ID_INFRA }}"

jobs:

  # Test and build the application
  # Upload the built binary as an artifact
  build:
    name: Build
    uses: savisec/github-actions/.github/workflows/go-build.yml@v1.2
    with:
      build-artifact-name: &build_artifact_name binaries
      build-output-file: &build_artifact_path ./bin

  # Build and push the Docker image
  docker-build-push:
    name: Docker Build
    uses: savisec/github-actions/.github/workflows/docker-build-push.yml@v1.2
    needs: build
    with:
      local-image-tag: 'hello-go-lambda:latest'
      component: lambda
      build-cmd: './docker/lambda/build.sh'
      artifact-name: *build_artifact_name
      artifact-path: *build_artifact_path
    permissions:
      contents: read
      # Required by the AWS OIDC provider
      id-token: write

  # Test CDK infrastructure
  cdk-test:
    name: CDK Test
    uses: ./.github/workflows/cdk-test.yml
    with:
      working-directory: cdk

  # Deploy CDK infrastructure to test environment
  cdk-deploy-test:
    name: Deploy Test
    uses: ./.github/workflows/cdk-deploy.yml
    needs:
      - cdk-test
      - docker-build-push
    with:
      action: deploy
      working-directory: cdk
      image-tag: ${{ needs.docker-build-push.outputs.image-digest }}
      env-name: test
      aws-region: us-west-2
    permissions:
      contents: read
      id-token: write

  # Teardown CDK infrastructure
  cdk-destroy-test:
    name: Destroy Test
    uses: ./.github/workflows/cdk-deploy.yml
    needs:
      - docker-build-push
      - cdk-deploy-test
    # Without always(), GitHub won't even evaluate this condition if any job in `needs:` failed.
    # `always()` forces the condition to run regardless of upstream failures, so we can still
    # decide based solely on docker-build-push's result.
    if: needs.docker-build-push.result == 'success' && always()
    with:
      action: destroy
      working-directory: cdk
      image-tag: ${{ needs.docker-build-push.outputs.image-digest }}
      env-name: test
      aws-region: us-west-2
    permissions:
      contents: read
      id-token: write

  docker-promote:
    name: Docker Promote
    uses: savisec/github-actions/.github/workflows/docker-promote.yml@v1.2
    needs:
      - cdk-deploy-test
      - docker-build-push
    if: github.ref == 'refs/heads/main'
    with:
      component: lambda
      image-digest: ${{ needs.docker-build-push.outputs.image-digest }}
    permissions:
      contents: read
      # Required by the AWS OIDC provider
      id-token: write

  # Deploy CDK infrastructure to live environment (play/stage/prod)
  cdk-deploy-live:
    name: Deploy Play
    uses: ./.github/workflows/cdk-deploy.yml
    needs:
      - docker-promote
    if: github.ref == 'refs/heads/main'
    with:
      action: deploy
      working-directory: cdk
      image-tag: ${{ needs.docker-promote.outputs.image-digest }}
      env-name: play
      aws-region: us-west-2
    permissions:
      contents: read
      id-token: write
